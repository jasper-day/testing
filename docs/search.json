[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "testing solidworks in git\nThis is a git repository created as a proof-of-concept, showing that it is possible to version control Solidworks parts in Git and create documentation to go alongside it.\nIn production, we would split the 3D models and documentation into their own parallel file trees.\nCheck out the website!\n\n\n\nGit, of course:\n\nGit allows you to clone the repository and push your changes. You can use a GUI interface or the command line.\n\nQuarto\n\nQuarto powers the website and documentation itself. It is easiest to use with the VSCode extension\nThe quarto website is stored as markdown files (*.qmd). These can be crossreferenced like so: [Link text](filename.qmd). You can also add images: ![Image caption](filename.jpg) and links to files elsewhere in the repository, as well as links to external resources.\nAfter making changes to the documentation, run quarto render before pushing the changes; this will update the website output in the /docs folder.\nWhile making changes, you can run quarto preview to preview the website and make sure everything is correct.\nQuarto allows you to include just about anything:\n\nEnclose in dollar signs: $equation$ for inline equations, $$ Long equation $$ for standalone\nYou can put html and iframes directly into the markdown documents\nNormal Markdown formatting applies: get italics with single *s, bold with double **s, strikethrough with ~~ tildes, titles with #, lines with -–\n\nCheck out the pandoc reference for a very complete list of things you can do\n\nYou can add working R, Python, or Julia code blocks with triple backticks\nNavigation can be done through standalone pages or a sidebar (the sidebar is a better choice for our wiki)\nAnd much more. Check out the documentation"
  },
  {
    "objectID": "Excellent_assembly.html",
    "href": "Excellent_assembly.html",
    "title": "Excellent Assembly",
    "section": "",
    "text": "The excellent assembly is made up of one excellent pole and one excellent rectangle. The excellent rectangle is unconstrained on the pole and may rotate 360° as well as sliding up and down."
  },
  {
    "objectID": "Excellent_pole.html",
    "href": "Excellent_pole.html",
    "title": "Excellent Pole",
    "section": "",
    "text": "Here is the STL"
  },
  {
    "objectID": "Excellent_rectangle.html",
    "href": "Excellent_rectangle.html",
    "title": "Excellent Rectangle",
    "section": "",
    "text": "The main downside that I can see to using Git (besides the fact that the entire repository is cloned onto your computer when you clone it, and that we could potentially run out of space if we host the repository on github) is that it may not recognize modifications to files, since it’s not designed around storing raw (binary) data like .SLDPRT files.\nThe hole in the middle is designed to fit the excellent pole with 0.2 mm of clearance.\nHere is the stl"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "solidworks_git",
    "section": "",
    "text": "To learn more about Quarto websites visit https://quarto.org/docs/websites.\nJust because I can, here is some utterly gratuitous \\LaTeX (the nozzle exit velocity v_2 of a nozzle):\n\n\\begin{aligned}\nv_2 &= \\sqrt{2gJ(h_1 - h_2) + v_1^2} \\\\\nv_2 &= \\sqrt{\\frac{2gk}{k - 1}RT_1\\left[1 - \\left(\\frac{p_2}{p_1} \\right) ^ \\frac{(k-1)}{k} \\right] + v_1^2}\n\\end{aligned}\n\nCheck out the excellent pole, the excellent rectangle, and the excellent ass."
  }
]